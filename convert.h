#ifndef _CONVERT_H_
#define _CONVERT_H_

#include <string>
#include <map>

typedef enum {CONSTANT, ID, PROGRAM, DECLRATION, VAR_DECALRATION, VAR_DECLARATION_WITH_INITIAL, 
            VAR_ARRAY_DECALRATION, TYPE, FUN_DECLARATION, FUN_DEFINITION, VOID, PARAMS, PARAM, 
            COM_STATEMENTS, STATEMENTS, IF, IF_ELSE, WHILE, RETURN, ASSIGNMENT, ARRAY, OPERATOR, FUN_CALL, ARGS} nodeType;

using namespace std;

map<string, int> typeMap = {{"BOOL", 1}, {"CHAR", 1}, {"INT", 4}, {"DOUBLE", 8}};

map<string, nodeType> nodeMap = {{"CONSTANT", CONSTANT}, {"ID", ID}, {"OPERATOR", OPERATOR}, {"PROGRAM", PROGRAM}, {"DECLRATION", DECLRATION}, 
                                {"VAR_DECALRATION", VAR_DECALRATION}, {"VAR_DECLARATION_WITH_INITIAL", VAR_DECLARATION_WITH_INITIAL}, 
                                {"VAR_ARRAY_DECALRATION", VAR_ARRAY_DECALRATION}, {"TYPE", TYPE}, {"FUN_DECLARATION", FUN_DECLARATION}, 
                                {"FUN_DEFINITION", FUN_DEFINITION}, {"VOID", VOID}, {"PARAMS", PARAMS}, {"PARAM", PARAM}, {"COM_STATEMENTS", COM_STATEMENTS}, 
                                {"STATEMENTS", STATEMENTS}, {"IF", IF}, {"IF_ELSE", IF_ELSE}, {"WHILE", WHILE}, {"RETURN", RETURN}, {"ASSIGNMENT", ASSIGNMENT}, 
                                {"ARRAY", ARRAY}, {"OPERATOR", OPERATOR}, {"FUN_CALL", FUN_CALL}, {"ARGSAR", ARGSAR}};

#endif